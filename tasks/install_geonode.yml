---
- name: install_geonode | clone geonode-project
  git:
    repo: "{{ geonode_project_repository }}"
    dest: "{{ install_root }}/geonode-project"
    clone: yes
    version: master

- name: install_geonode | install django
  pip: 
    name: Django
    version: "{{ django_version }}"
    virtualenv: "{{ virtualenv_dir }}"

- name: install_geonode | create new geonode-project
  command: "{{ virtualenv_dir }}/bin/django-admin startproject --template=./geonode-project -e py,rst,json,yml,ini,env,sample -n Dockerfile {{ project_name }}"
  args:
    chdir: "{{ install_root }}"
    creates: "{{ project_path }}"

- name: install_geonode | install requirements.txt
  pip: 
    requirements: "{{ project_path }}/requirements.txt"
    virtualenv: "{{ virtualenv_dir }}"
    chdir: "{{ project_path }}"
    extra_args: --upgrade 

- name: install_geonode | upgrade pip packages 
  pip: 
    name: "{{ project_path }}/"
    editable: true
    virtualenv: "{{ virtualenv_dir }}"
    extra_args: --upgrade

- name: install_geonode | get installed gdal_version 
  command: gdal-config --version | cut -c 1-5 
  register: gdal_version

- name: install_geonode | install correct pygdal version
  command: "{{ virtualenv_dir }}/bin/pip install pygdal>={{ gdal_version.stdout }}.0,<={{ gdal_version.stdout }}.999"

- name: install_geonode | write local_settings.py
  template: src=./templates/django/local_settings.py.j2 dest={{ project_path }}/{{ project_name }}/local_settings.py
  become: yes